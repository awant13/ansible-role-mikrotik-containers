---
##
# Enviroments containers
##

- name: Get .ids envs
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: container envs
    query: ".id comment WHERE comment == {{ container_desc }}_{{ envs.name }}"
  loop: "{{ containers }}"
  loop_control:
    loop_var: envs 
  register: envsId
  tags: envs

- debug:
    var: envsId
  when: debug == true
  tags: envs

- name: Add container envs
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: container envs
    cmd: 'add key={{ item.1.key }} name={{ container_desc }}_{{ item.0.name }}_envs value="{{ item.1.value }}" comment={{ container_desc }}_{{ item.0.name }}'
  loop: "{{ containers | subelements('enviroments', skip_missing=True) }}"
  when: item.0.state == "present" and ('no results for' in (envsId.results | selectattr('envs.name', 'equalto', item.0.name) | map(attribute='msg') | join(' ')))
  ignore_errors: yes
  register: result_env
  tags: envs

- debug:
    var: result_env
  when: debug == true
  tags: envs

- name: Remove container envs
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: container envs
    remove: "{{ item.1['.id'] }}"
  loop: "{{ envsId.results | subelements('msg') }}"
  register: result_remove
  when: item.0.envs.state == 'absent' and item.1 is defined and item.1['.id'] is defined
  tags: envs

- debug:
    var: result_remove
  when: debug == true
  tags: envs