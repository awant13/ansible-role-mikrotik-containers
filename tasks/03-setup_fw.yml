---
##
# Ports
##

- name: Get .ids firewall ports
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: ip firewall nat 
    query: ".id comment WHERE comment == {{ container_desc }}_{{ fw.name }}"
  loop: "{{ containers }}"
  loop_control:
    loop_var: fw 
  register: fwId
  tags: fw

- debug:
    var: fwId
  when: debug == true
  tags: fw

- name: Add firewall ports
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: ip firewall nat 
    cmd: "add chain=dstnat action=dst-nat to-addresses={{ port.0.interface.address.split('/')[0] }} protocol={{ port.1.protocol }} in-interface={{ container_wan }} dst-port={{ port.1.src }} to-ports={{ port.1.dst }} comment={{ container_desc }}_{{ port.0.name}}"
  loop: "{{ containers | subelements('ports', skip_missing=True) }}"
  loop_control:
    loop_var: port
    index_var: idx
  register: result_add_ports_fw
  when: port.0.state == "present" and ('no results for' in (fwId.results | selectattr('fw.name', 'equalto', port.0.name) | map(attribute='msg') | join(' ')))
  tags: fw 

- debug:
    var: result_add_ports_fw
  when: debug == true
  tags: fw

- name: Remove firewall ports
  community.routeros.api:
    hostname: "{{ inventory_hostname }}"
    username: "{{ mik_username }}"
    password: "{{ mik_password }}"
    path: ip firewall nat 
    remove: "{{ item.msg[0]['.id'] }}"
  loop: "{{ fwId.results }}"
  register: result_remove_fw
  when: 
    - item.fw is defined
    - item.fw.state | default('present') == "absent"
    - item.msg | length > 0
    - item.msg[0]['.id'] is defined
  tags: fw

- debug:
    var: result_remove_fw
  when: debug == true
  tags: fw